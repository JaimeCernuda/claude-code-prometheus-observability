services:
  # OpenTelemetry Collector for telemetry collection
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-config.yaml:/etc/otel-collector-config.yaml
      - ./telemetry-data:/telemetry
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8888:8888"   # Prometheus metrics endpoint
    user: "0:0"  # Run as root to avoid permission issues
    depends_on:
      - prometheus

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: claude-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  # Prometheus Push Gateway for hook events
  pushgateway:
    image: prom/pushgateway:latest
    container_name: claude-pushgateway
    ports:
      - "9091:9091"

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: claude-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus

  # Claude Code container
  claude-code:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: claude-code
    environment:
      # Enable telemetry collection
      - CLAUDE_CODE_ENABLE_TELEMETRY=1
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
      
      # Configure OpenTelemetry exporters
      - OTEL_METRICS_EXPORTER=otlp
      - OTEL_LOGS_EXPORTER=otlp
      
      # Set shorter intervals for debugging
      - OTEL_METRIC_EXPORT_INTERVAL=10000
      - OTEL_LOGS_EXPORT_INTERVAL=5000
      
      # Enable full prompt logging (shows actual conversation content)
      - OTEL_LOG_USER_PROMPTS=1
      
      # Enhanced logging configuration
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_EXPORTER_OTLP_LOGS_PROTOCOL=grpc
      - OTEL_EXPORTER_OTLP_LOGS_ENDPOINT=http://otel-collector:4317
      
      # Prometheus configuration for hooks
      - PROMETHEUS_PUSH_GATEWAY=http://pushgateway:9091
      
      # User info for tracking - MUST be provided by user
      - USER_NAME=${USER_NAME}
      - USER_EMAIL=${USER_EMAIL}
    volumes:
      - ./workspace:/home/claude-user/workspace
      - ./telemetry-data:/telemetry
      - ./.claude-template:/home/claude-user/.claude-template
    depends_on:
      - otel-collector
      - pushgateway
    stdin_open: true
    tty: true
    
    # Graceful shutdown
    stop_grace_period: 10s

volumes:
  prometheus_data:
  grafana_data:
